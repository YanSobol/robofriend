{"version":3,"sources":["components/Card/Card.js","components/Card/CardList.js","components/Search box/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","robot","name","username","email","id","className","alt","src","CardList","CardArray","robots","map","item","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChanges","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"mQAmBeA,EAbF,SAACC,GACV,MAAoCA,EAAMC,MAAnCC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,SAAUC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,GAC9B,OACI,qBAAKC,UAAU,YAAf,SACI,sBAAKA,UAAU,4CAAf,UACI,qBAAKA,UAAU,cAAcC,IAAI,cAAcC,IAAG,+BAA0BL,EAAWE,EAArC,cAClD,6BAAKH,IACL,6BAAKE,UCENK,EAZE,SAACT,GACd,IACMU,EADSV,EAAMW,OACIC,KAAI,SAACC,GAC1B,OAAO,cAAC,EAAD,CAAsBZ,MAASY,GAAlBA,EAAKR,OAE7B,OACA,qBAAKC,UAAU,iBAAf,SACKI,KCMMI,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAEhB,OACI,qBAAKT,UAAU,MAAf,SACI,uBAAOA,UAAU,mCACbU,KAAK,SACLC,YAAY,eACZC,SAAUH,OCEXI,EAVA,SAACnB,GACZ,OACI,qBAAKoB,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAO,SAApE,SACKvB,EAAMwB,YCuBJC,G,wDAzBX,WAAYzB,GAAO,IAAD,8BACd,cAAMA,IACD0B,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WAGI,OAFmBG,KAAKJ,MAAjBC,SAIC,0DAGGG,KAAK9B,MAAMwB,a,GApBHQ,cC+CZC,E,kDArCX,aAAc,IAAD,8BACT,gBAaJC,gBAAkB,SAACC,GACf,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAbzC,EAAKZ,MAAQ,CACTf,OAAQ,GACRyB,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OACfG,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAW,EAAKZ,SAAS,CAACpB,OAAQgC,S,oBAOhD,WAAS,IAAD,OACEC,EAAiBd,KAAKJ,MAAMf,OAAOkC,QAAO,SAAA5C,GAC5C,OAAOA,EAAMC,KAAK4C,cAAcC,SAAS,EAAKrB,MAAMU,YAAYU,kBAGpE,OACI,sBAAKxC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,wBACA,cAAC,EAAD,CAAWS,aAAce,KAAKI,kBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUvB,OAAUiC,e,GA/B1BZ,aCEHgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAMhDX,M","file":"static/js/main.c676492a.chunk.js","sourcesContent":["import React from 'react';\nimport './Card.css';\nimport 'tachyons';\n\n\n// One more way to pass props: const Card = ({name, username, email, id}) => {}\nconst Card = (props) => {\n    const {name, username, email, id} = props.robot;\n    return(\n        <div className='container'>\n            <div className='card tc dib br3 pa3 ma2 grow bw2 shadow-5'>\n                <img className='robot_image' alt='robot_image' src={`https://robohash.org/${username + id}?200x200`}/>\n                <h2>{name}</h2>\n                <h5>{email}</h5>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card'\n\nconst CardList = (props) => {\n    const robots = props.robots;\n    const CardArray = robots.map((item) => {\n        return <Card key = {item.id} robot = {item} />\n    })\n    return (\n    <div className='flex flex-wrap'>\n        {CardArray}\n    </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\n\nconst SearchBox = ({searchChange}) => {\n\n    return (\n        <div className='pa2'>\n            <input className='pa3 ba b--green bg-lightest-blue'\n                type='search' \n                placeholder='search robot'\n                onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;\n\n\n\n\n\n\n","import React from 'react'\n\nconst Scroll = (props) => {\n    return (\n        <div style={{ overflow: 'scroll', border: '2px solid white', height:\"700px\"}}>\n            {props.children}\n        </div>\n    );\n};\n\n\n\nexport default Scroll;","import React, {Component} from 'react'\n\nclass ErrorBoundry extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info){\n        this.setState({hasError: true})\n    }\n\n    render() {\n        const {hasError} = this.state;\n        \n        if(hasError) {\n            return (\n                <h1>Oooops we have a problem</h1>\n            );\n        }else {\n            return this.props.children;\n        }\n       \n    }\n}\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport CardList from '../components/Card/CardList';\nimport SearchBox from '../components/Search box/SearchBox';\nimport Scroll from '../components/Scroll'\nimport './App.css';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\n\n\n\nclass App extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => { this.setState({robots: users}) });\n    }\n\n    onSearchChanges = (event) => {\n        this.setState({searchfield: event.target.value});\n    }\n\n    render(){\n        const filteredRobots = this.state.robots.filter(robot => {\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n        });\n\n        return (\n            <div className='tc'>\n                <h1 className='f1'>RoboFriend</h1>\n                <SearchBox searchChange={this.onSearchChanges}/>\n                <Scroll>\n                    <ErrorBoundry>\n                        <CardList robots = {filteredRobots} />\n                    </ErrorBoundry>\n                </Scroll>\n            </div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App/>, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}